#####################################
# Data configuration for hh4b study #
#####################################


treename: Events

selection:
    # Define the selection for the training set
    # note: temporarily disabled (custom_Flag_ecalBadCalibFilter == 1)
    #       since it was accidentally set to 0 for the feynnetpairing ntuples...
    ( (event % 2 == 0)
    & (n_ak4 >= 4)
    & (dHH_NbtagM == 4)
    & (dHH_HH_mass > 350)
    & (passmetfilters == 1)
    & (passjetvetomap == 1)
    & (avgbdisc_twoldgbdiscjets > 0.55) )

test_time_selection:
    # Define the selection for the testing set
    ( (event % 2 == 1)
    & (n_ak4 >= 4)
    & (dHH_NbtagM == 4)
    & (dHH_HH_mass > 350)
    & (passmetfilters == 1)
    & (passjetvetomap == 1)
    & (avgbdisc_twoldgbdiscjets > 0.55) )

file_magic:
  # Match file names to custom sample index
  sample:
    synthetic_data.+\.root: 1
    SyntheticData.+\.root: 1
    syndata.+\.root: 1
    jetmet_tree.root: 0
    parkinghh_tree.root: 0
    data.+\.root: 0

new_variables:
    # Define new variables as a function of existing variables
    hh_average_mass: (0.5*(dHH_H1_mass+dHH_H2_mass))
    isSignal: sample==1
    isSynData: sample==1
    isBackground: sample==0
    isData: sample==0

    ak4_mask: ak.ones_like(ak4_pt)
    ak4p4: _p4_from_ptetaphim(ak4_pt, ak4_eta, ak4_phi, ak4_mass)
    ak4_px: ak4p4.px
    ak4_py: ak4p4.py
    ak4_pz: ak4p4.pz
    ak4_energy: ak4p4.energy
    ak4_pt_log: np.log(ak4_pt)
    ak4_energy_log: np.log(ak4_energy)

preprocess:
   method: manual
   data_fraction: 1

inputs:
   # Define input features to the network
   points:
      length: 6
      pad_mode: wrap
      vars:
         - [ak4_eta, null]
         - [ak4_phi, null]
   features:
      length: 6
      pad_mode: wrap
      vars:
         - [ak4_pt_log, 4, 1]
         - [ak4_energy_log, 4, 1]
         - [ak4_eta, null]
         - [ak4_phi, null]
         - [ak4_btag_L, null]
         - [ak4_btag_M, null]
         - [ak4_btag_T, null]
         - [ak4_btag_XT, null]
   vectors:
      length: 6
      pad_mode: wrap
      vars:
         - [ak4_px, null]
         - [ak4_py, null]
         - [ak4_pz, null]
         - [ak4_energy, null]
   mask:
      length: 6
      pad_mode: constant
      vars:
         - [ak4_mask, null]

labels:
   type: simple
   value: [isSignal, isBackground]

observers:
  # Make sure the decorrelated variable is used as observer,
  # to make post-training conclusions.
  - dHH_H1_mass
  - dHH_H2_mass
  - hh_average_mass
  - dHH_NbtagM
  - dHH_NbtagT
  - isSignal
  - isSynData
  - isBackground
  - isData

weights:
   use_precomputed_weights: false
   reweight_basewgt: np.ones(len(event))
   reweight_method: flat
   reweight_threshold: 0
   reweight_load_fraction: 1.
   reweight_vars:
     dHH_NbtagT: [0, 10]
     dHH_NbtagM: [0, 10]
   reweight_discard_under_overflow: false
   reweight_classes: [isBackground, isSignal]
   class_weights: [1, 1]
